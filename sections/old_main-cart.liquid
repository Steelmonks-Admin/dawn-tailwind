{% style %}
  .list-payment {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
  }

  .list-payment__item {
    align-items: center;
    display: flex;
    padding: 2px;
  }
{% endstyle %}

<script src='{{ 'cart.js' | asset_url }}' defer='defer'></script>

{% comment %} ! Cart form {% endcomment %}
<cart-form class='{% if cart == empty %} is-empty{% endif %}'>
  <form
    action='{{ routes.cart_url }}'
    method='post'
    id='Cart'
    data-id='{{ section.id }}'
  >
    <div class='js-contents' data-content='empty-cart'>
      {%- if cart == empty -%}
        <div class='empty-cart-wrapper text-center'>
          <h1 class='u-h1'>{{ 'sections.cart.title' | t }}</h1>
          <p>{{ 'sections.cart.empty' | t }}</p>
          <p>
            <a href='/collections/{{ 'sections.best_seller_collection_name' | t }}' class='btn'>
              {{- 'general.continue_shopping' | t -}}
            </a>
          </p>
        </div>
      {%- endif -%}
    </div>

    {%- if cart != empty -%}
      <style>
        div.Button_back-to-shop {
          display: none;
        }
      </style>
      <div class='filled-cart-wrapper'>
        <div class='js-contents' data-content='cart-items'>
          {%- unless settings.cart_text == blank -%}
            <div class='rte'>
              {{ settings.cart_text }}
            </div>
          {%- endunless -%}

          {% comment %} ! Cart items table {% endcomment %}
          <table class='cart-items'>
            <tbody>
              <thead>
                <tr class='cart-items__header'>
                  <th colspan='1' scope='col'>
                    {{ 'sections.cart.title' | t }}
                    {%- if settings.cart_show_item_count -%}
                      <span>{{ 'sections.cart.item_count' | t: count: cart.item_count }}</span>
                    {%- endif -%}
                  </th>
                </tr>
                <tr class='cart-items__header2'>
                  <th colspan='1' scope='col'>
                    {{ 'sections.cart.headings.image' | t }}
                  </th>
                  <th colspan='1' scope='col'>
                    {{ 'sections.cart.headings.product' | t }}
                  </th>
                  <th colspan='1' scope='col'>
                    {{ 'sections.cart.headings.price' | t }}
                  </th>
                </tr>
              </thead>
              {% comment %} ! Add each cart item on a separate row {% endcomment %}
              {%- for item in cart.items -%}
                {% comment %} ! Don't show reward products {% endcomment %}
                {% unless item.product.metafields.custom.reward_product %}
                  {% comment %} ! Default variables {% endcomment %}
                  {% assign product_properties_size = item.properties | size %}

                  <tr id='CartItem-{{ item.index | plus: 1 }}' class='cart-item'>
                    <td colspan='1' class='cart-item__image'>
                      {% if item.image %}
                        <a
                          {% unless item.product.metafields.seo.hidden %}
                            href='{{ item.url }}'
                          {% endunless %}
                          aria-hidden='true'
                          tabindex='-1'
                          class='cart-media'
                        >
                          <div class='' style=''>
                            <img
                              src='{{ item.image | image_url: width: 300 }}'
                              class='pplr_original_img cart-item__image'
                              alt='{{ item.image.alt | escape }}'
                              loading='lazy'
                              width='150'
                              height='{{ 150 | divided_by: item.image.aspect_ratio | ceil }}'
                            >
                          </div>
                        </a>
                      {% endif %}
                    </td>

                    <td colspan='1' class='cart-item__details'>
                      {%- if settings.show_vendor != false -%}
                        <p>
                          <small>{{ item.product.vendor }}</small>
                        </p>
                      {%- endif -%}

                      <a
                        {% if item.product.metafields.seo.hidden %}
                          style='cursor: text;'
                        {% else %}
                          href='{{ item.url }}'
                        {% endif %}
                        class='cart-item__details__title'
                      >
                        {{ item.product.title | escape }}
                        {% for collection in item.product.collections %}
                          {% comment %} For best sellers, add a good choice badge as they're already buying it {% endcomment %}
                          {% if collection.handle contains 'beliebt' %}
                            <span class='cart-item__details__title__badge'>
                              {{- 'general.badges.good_choice' | t -}}
                            </span>
                          {% endif %}
                        {% endfor %}
                      </a>

                      {% comment %} ! eTrusted widget {% endcomment %}
                      <!-- Begin eTrusted widget tag -->
                      {% if item.sku != blank %}
                        <etrusted-widget
                          style='font-size: 14px;'
                          data-etrusted-widget-id='wdg-7e981e7c-c798-40cb-9c30-e695d0aa36ea'
                          data-sku='{%- for variant in item.product.variants -%}{{ variant.sku -}},{%- endfor -%}{% if item.sku == 'PIN-BE-2000' or item.sku == 'PIN-BE-2000X' %}PIN-BE-2000X,PIN-BE-2000{% endif %}'
                        ></etrusted-widget>
                      {% endif %}
                      <!-- End eTrusted widget tag -->

                      {% if item.product.metafields.seo.hidden == blank %}
                        <div class='cart-info-block'>
                          <details id='target-me'>
                            <summary>
                              <label for='Cart-Note'>{{ 'sections.cart.title' | t }}</label>
                              <svg
                                width='11'
                                height='6'
                                viewBox='0 0 11 6'
                                fill='none'
                                xmlns='http://www.w3.org/2000/svg'
                              >
                                <path d="M10 0.75L5.5 5.25L1 0.75" stroke="currentColor" />
                              </svg>
                            </summary>

                            <div class='dropdown-content' id='Cart-Info'>
                              {%- comment -%}
                                We need to check whether there are variants, custom information, or selling plans
                              {%- endcomment -%}

                              {% comment %}
                                We output the chosen variant title here.
                              {% endcomment %}
                              {% if item.variant.title != item.product.title
                                and item.variant.title != 'Default Title'
                              %}
                                <dl>
                                  <dt>
                                    {{ 'products.product.product_variants' | t }}
                                  </dt>
                                  <dd>
                                    {{ item.variant.title }}
                                  </dd>
                                </dl>
                              {% endif %}

                              {%- if item.product.has_only_default_variant == false
                                or item.properties.size != 0
                                or item.selling_plan_allocation != null
                              -%}
                                <dl>
                                  {%- comment -%}
                                    We output each of the pieces of custom information on a product. Examples of this are engraving and
                                    files. For each of these, we need to check whether or not /uploads/ is present, because that
                                    indicates a file that we can link to for the buyer to validate.
                                  {%- endcomment -%}
                                  {%- for property in item.properties -%}
                                    {%- assign property_first_char = property.first | slice: 0 -%}
                                    {%- if property.last != blank and property_first_char != '_' -%}
                                      <dt>{{ property.first }}</dt>
                                      <dd>
                                        {%- if property.last contains '/uploads/' -%}
                                          <a
                                            href='{{ property.last }}'
                                            target='_blank'
                                          >
                                            {{ property.last | split: '/' | last }}
                                          </a>
                                        {%- else -%}
                                          {{ property.last }}
                                        {%- endif -%}
                                      </dd>
                                    {%- endif -%}
                                  {%- endfor -%}

                                  {%- comment -%}
                                    Finally, we output the selling plan allocation for the product, if there is one.
                                  {%- endcomment -%}
                                  {%- unless item.selling_plan_allocation.selling_plan.name == empty -%}
                                    <p>{{ item.selling_plan_allocation.selling_plan.name }}</p>
                                  {%- endunless -%}
                                </dl>
                              {% else %}
                                <span style='font-size: 14px; font-weight: 400;'>
                                  {{- 'sections.cart.empty' | t -}}
                                </span>
                              {%- endif -%}

                              {%- comment -%}
                                Item level discounts can be applied by merchants, and must be shown to the buyer
                              {%- endcomment -%}
                              <ul
                                class='list-unstyled'
                                role='list'
                                aria-label='{{ 'customer.order.discount' | t }}'
                              >
                                {%- for discount_allocation in item.line_level_discount_allocations -%}
                                  <li>
                                    {{ discount_allocation.discount_application.title }} (-
                                    {{- discount_allocation.amount | money -}}
                                    )
                                  </li>
                                {%- endfor -%}
                              </ul>
                            </div>
                          </details>
                        </div>
                      {% endif %}

                      {% comment %} ! controls group {% endcomment %}
                      <div class='cart-item__controls'>
                        {% comment %} ! price display {% endcomment %}
                        {% unless item.product.price == 0 %}
                          <div class='mobile-only'>
                            {% render 'old_price-display', item: item %}
                          </div>
                        {% endunless %}
                        {% comment %} ! remove controls for hidden products, unless hide_product_controls is set to 1 or 3 {% endcomment %}
                        {% if item.product.metafields.seo.hidden == blank
                          or item.product.metafields.custom.hide_product_controls == 1
                          or item.product.metafields.custom.hide_product_controls == 3
                        %}
                          <cart-remove-button
                            id='Remove-{{ item.index | plus: 1 }}'
                            data-index='{{ item.index | plus: 1 }}'
                          >
                            <a
                              href='{{ item.url_to_remove }}'
                              aria-label='{{ 'sections.cart.remove_title' | t: title: item.title }}'
                            >
                              {{ 'sections.cart.remove' | t }}
                            </a>
                          </cart-remove-button>
                        {% endif %}
                      </div>
                      {% comment %} ! quantity controls {% endcomment %}
                      {% unless product_properties_size > 0 %}
                        {% render 'old_product-quantity-controls', item: item %}
                      {% endunless %}
                    </td>

                    <td colspan='1' class='cart-item__total desktop-only'>
                      {% render 'old_price-display', item: item %}
                    </td>
                  </tr>
                {% endunless %}
              {%- endfor -%}

              {% comment %} ! Add reward items in a single row after all of the other items {% endcomment %}
              {% if section.settings.cart_show_reward_items %}
                {% comment %} A/B Test: Disable gamification cart rewards {% endcomment %}
                {% comment %} {% render 'cart-rewards' %} {% endcomment %}
              {% endif %}
            </tbody>
          </table>
        </div>

        {% comment %} ! Cart note {% endcomment %}
        {%- if section.settings.cart_show_notes -%}
          {%- comment -%} Cart notes section for customer instructions {%- endcomment -%}
          <div class='cart-note'>
            <label for='CartSpecialInstructions' class='text-lbl'>{{ 'sections.cart.note' | t }}</label>
            <div class='not-text-area'>
              <textarea
                name='note'
                id='Cart-Note'
                placeholder='...'
              >{{ cart.note }}</textarea>
            </div>
          </div>
        {%- endif -%}

        {% comment %} ! Cart discounts {% endcomment %}
        {% render 'old_cart-discounts' %}

        {% comment %} ! Cart footer {% endcomment %}
        {% render 'old_cart-footer' %}
      </div>
    {% else %}
      <style>
        div.Button_back-to-shop {
          display: block;
        }
      </style>
    {%- endif -%}

    <p
      class='visually-hidden'
      id='Cart-LiveRegionText'
      aria-live='polite'
      role='status'
    ></p>
    <p
      class='visually-hidden'
      id='Cart-LineItemStatus'
      aria-live='polite'
      aria-hidden='true'
      role='status'
    >
      {{ 'accessibility.loading' | t }}
    </p>
  </form>
</cart-form>

<!-- Taboola Pixel Code -->
<script>
  _tfa.push({
    notify: 'event',
    name: 'cart_view',
    id: 1617083,
    revenue: '{{ cart.total_price }}',
    currency: '{{ shop.currency }}',
    orderid: '{{ cart.id }}',
    quantity: '{{ cart.item_count }}',
  });
</script>
<!-- End of Taboola Pixel Code -->

{% schema %}
{
  "name": "Main Cart (old)",
  "settings": [
    {
      "type": "checkbox",
      "id": "cart_show_notes",
      "label": "Show cart notes",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "cart_show_reward_items",
      "label": "Show rewards in the cart",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "cart_show_payment_icons",
      "label": "Show payment icons",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "cart_show_discount_applications",
      "label": "Show discount applications",
      "default": true
    }
  ],
  "presets": [
    {
      "name": "Main Cart"
    }
  ]
}
{% endschema %}

{% comment %}
  ! temporarily turned off
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const checkoutWrapper = document.querySelector('.checkout-wrapper');
      const scrollContainer = document.querySelector('.filled-cart-wrapper');

      if (checkoutWrapper && scrollContainer) {
        const checkoutWrapperObserver = new IntersectionObserver(
          ([entry]) => {
            checkoutWrapper.toggleAttribute('data-stuck', !entry.isIntersecting);
          },
          {
            root: scrollContainer,
            threshold: 0,
            rootMargin: '0px 0px 10px 0px',
          },
        );

        checkoutWrapperObserver.observe(checkoutWrapper);
      }
    });
  </script>
{% endcomment %}

{% style %}
  /* remove floating chat icon */
  div[style='visibility: visible;'] {
    display: none;
  }

  /* whole cart styles */
  .filled-cart-wrapper {
    display: flex;
    align-items: center;
    flex-direction: column;
    gap: 16px;
  }
  .filled-cart-wrapper > div {
    width: 100%;
  }
  .cart-item:first-child {
    margin-top: 0;
  }
  .cart-item:last-child {
    margin-bottom: 0;
  }
  .cart-items {
    border: 2px solid #000;
    border-radius: 10px;
    background-color: #fafaff;

    display: flex;
    flex-direction: column;

    margin: 6rem auto 0 auto;

    max-width: 1000px;
  }
  .cart-items tbody {
    display: flex;
    flex-direction: column;
  }
  .cart-item {
    display: flex;
    text-align: center;
    justify-content: center;
    align-items: center;

    text-align: left;

    padding: 8px;

    border-bottom: 1px dashed #000;
    border-radius: 10px;
    background-color: #fafaff;
  }
  .cart-item:last-child {
    border-bottom: unset;
  }
  form#Cart {
    padding: 12px;
  }
  .cart-item__image {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    object-fit: cover;

    padding: 0;

    border: unset;
  }
  .cart-item__image img {
    aspect-ratio: 1 / 1;
    border-radius: 10px;

    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.1);
  }
  .cart-item__details {
    display: flex;
    gap: 8px;
    flex-direction: column;
    align-items: flex-start;
    padding: 12px 8px;
  }

  /* Empty cart */
  .empty-cart-wrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 12px;
  }

  /* ! Cart info */
  /* cart info block */
  .cart-info-dropdown {
    font-weight: 600;
    margin-bottom: 0;
    border: 1px solid;
    padding: 0;
    margin-top: 5px;
    max-width: 400px;
  }
  .dropdown-content dl {
    display: grid;
    grid-template-columns: 0.5fr 1fr;
    gap: 4px 8px;

    padding: 4px 0;

    text-align: left;
    font-size: 12px;
  }
  .dropdown-content dt {
    font-weight: bold;

    border-bottom: 1px dashed rgba(0, 0, 0, 0.25);
  }
  .dropdown-content dd {
    margin: 0;
    grid-column-start: 2;

    border-bottom: 1px dashed rgba(0, 0, 0, 0.25);
  }

  .dropdown-content a {
    text-decoration: underline;
    color: #04c;
  }

  /* cart header */
  .cart-items thead {
    max-width: 100%;
  }
  .cart-items thead tr {
    display: flex;
    width: 100%;

    padding: 16px 0;

    border-bottom: 1px solid #000;
    border-top-right-radius: 10px;
    border-top-left-radius: 10px;
  }
  .cart-items thead tr th {
    flex: 1;
  }
  .cart-items th {
    font-size: 14px !important;
    font-weight: 500;
    padding: 0;
  }
  .cart-items__header th {
    font-weight: 600;
  }

  /* cart items */
  .cart-item td {
    flex: 1;
  }

  /* cart item title */
  .cart-item__details__title {
    font-size: 14px;
    font-weight: 600;
    line-height: 1.2;
    text-align: left;
    text-decoration: none;

    color: #090a0c;

    display: block;
  }
  .cart-item__details__title__badge {
    display: inline-block;
    font-size: 10px;
    font-weight: 400;
    vertical-align: middle;
    color: #fafaff;
    background-color: #4cb944;
    padding: 2px 8px;
    border-top-left-radius: 8px;
    border-bottom-right-radius: 8px;
    text-transform: uppercase;
  }

  /* cart item price */
  .cart-item__details__price {
    font-size: 14px;
  }

  /* delete product button */
  cart-remove-button a {
    font-size: 14px;
    text-decoration: none;
    color: #808080;
  }

  /* cart info dropdown */
  .cart-info-block {
    border: 1px solid #000;
    width: 100%;
    position: relative;
    top: 0;
  }
  .cart-info-block svg {
    align-self: center;
  }
  .cart-info-block summary {
    display: flex;
    justify-content: space-between;
    padding: 5px 9px;
    position: relative;
    font-size: 14px;
  }
  .cart-info-block summary:after {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    content: '';
    z-index: 9;
  }
  .cart-info-block .dropdown-content {
    padding: 10px;
    border-top: 1px solid #000;
  }

  /* cart item controls */
  .cart-item__controls {
    display: flex;
    width: 100%;
    justify-content: space-between;
    align-items: center;
  }

  /* cart item quantity */
  .quantity {
    border: 1px solid currentColor;
    position: relative;
    display: flex;
    justify-content: flex-start;
    border-radius: var(--button-border-radius);
  }
  .cart-quantity {
    padding: 0;
  }

  .quantity__button {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .quantity__button svg {
    width: 2.4rem;
    height: auto;
    pointer-events: none;
  }

  .quantity__input {
    color: currentColor;
    font-size: 1.4rem;
    font-weight: 500;
    opacity: 0.85;
    text-align: center;
    background-color: transparent;
    border: 0;
    width: 40px;
    -webkit-appearance: none;
    appearance: none;
  }

  .quantity__input[type='number'] {
    -moz-appearance: textfield;
  }

  .cart-item__quantity {
    width: 100%;
    display: flex;
    flex-direction: column;
  }

  /* Cart note */
  .cart-note {
    max-width: 1000px;
    width: 100%;
    margin: 0 auto;
  }

  .cart-note textarea {
    min-width: 100%;
    max-width: 100%;
    width: 100%;

    min-height: 100px;
    max-height: 300px;

    border-radius: 10px;
    border-color: #090a0c;

    padding: 10px;
  }
  .cart-note textarea:focus {
    outline: none;
    border-color: #04c;
    color: #04c;
  }

  /* ! Mobile styles */
  @media (max-width: 768px) {
    /* whole cart styles */

    /* ! Cart info */
    /* cart header */
    .cart-items thead {
    }

    /* cart item image */
    .cart-item__image {
      max-width: 100px;

      width: fit-content !important;
      height: 100%;

      border: unset;
    }

    /* cart info dropdown */

    /* copied dump - to reorder later */
    td.cart-item__details {
      width: 100%;
    }

    td.cart-item__details a.u-h6.font-2.link {
      display: block;
      font-size: 18px !important;
    }

    td.cart-item__details .a_pplr_item_price.pplr_subtotal_price {
      display: none;
    }

    td.cart-item__total span.a_pplr_item_price.pplr_subtotal_price {
      font-size: 16px;
    }
    td.cart-item__quantity {
      padding-top: 0;
      padding-left: 0;
      padding-right: 0;
      padding-bottom: 10px;
    }
    .cart-items__header2 {
      display: none !important;
    }
  }
{% endstyle %}
