name: CI
on: [push]
jobs:
  tailwindcss-update:
    name: Generate Tailwind CSS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true
          fetch-depth: 0
      - name: Fix Git Permissions
        run: |
          echo "Fixing Git permissions..."
          # Get the current user and group
          CURRENT_USER=$(whoami)
          CURRENT_GROUP=$(id -gn)
          echo "Current user: $CURRENT_USER"
          echo "Current group: $CURRENT_GROUP"

          # Set extremely permissive permissions for the entire workspace
          sudo chmod -R 777 .

          # Ensure .git directory has full permissions
          sudo chmod -R 777 .git
          sudo chmod -R 777 .git/objects

          # Set ownership to the current user
          sudo chown -R $CURRENT_USER:$CURRENT_GROUP .
          sudo chown -R $CURRENT_USER:$CURRENT_GROUP .git

          # Configure Git to trust the workspace
          git config --global --add safe.directory "$(pwd)"

          # Debug output
          echo "Workspace permissions:"
          ls -la
          echo "Git directory permissions:"
          ls -la .git
          echo "Git objects directory permissions:"
          ls -la .git/objects
          echo "Git config:"
          git config --list
      - name: Debug Git Configuration
        run: |
          echo "Git user configuration:"
          git config --list
          echo "Current directory:"
          pwd
          echo "Directory contents:"
          ls -la
          echo "Git status:"
          git status
      - name: Debug File Permissions
        run: |
          echo "File permissions after generation:"
          ls -la assets/
          echo "Git status after generation:"
          git status
      - name: Pull Latest Changes
        run: |
          echo "Pulling latest changes from remote..."
          # Configure Git user
          git config user.name "Steelmonks"
          git config user.email "164031344+Steelmonks-Admin@users.noreply.github.com"

          # Ensure permissions are correct
          sudo chmod -R 777 .
          sudo chmod -R 777 .git

          # Pull latest changes first to avoid conflicts
          git pull origin main --rebase || {
            echo "❌ Failed to pull latest changes. This usually indicates a conflict."
            echo "Please resolve conflicts manually and re-run the workflow."
            echo "Current git status:"
            git status
            echo "Git log (last 5 commits):"
            git log --oneline -5
            exit 1
          }

          echo "Git status after pull:"
          git status
      - name: Regenerate Tailwind CSS
        uses: ZoeyVid/tailwindcss-update@v1.4.0
        with:
          input: assets/app-tailwind.css
          output: assets/app.css
          params: ''
      - name: Commit & Push Generated CSS
        run: |
          echo "Attempting to add generated CSS file..."

          # Ensure permissions are still correct before commit
          sudo chmod -R 777 .
          sudo chmod -R 777 .git

          # Force add the generated CSS file (this will overwrite any existing version)
          git add -f assets/app.css
          echo "Git status after add:"
          git status

          # Create a commit with the generated file
          git commit -m "ci: tailwindcss-update" || echo "No changes to commit"
          echo "Git status after commit:"
          git status

          # Push changes
          echo "Attempting to push..."
          git push origin main || {
            echo "❌ Failed to push changes to remote."
            echo "This may indicate additional conflicts or permission issues."
            echo "Please check the repository and resolve any remaining issues manually."
            exit 1
          }
  lhci:
    name: Lighthouse
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Lighthouse
        uses: shopify/lighthouse-ci-action@v1
        with:
          access_token: ${{ secrets.SHOP_ACCESS_TOKEN }}
          store: ${{ secrets.SHOP_STORE }}
          password: ${{ secrets.SHOP_PASSWORD }}
          lhci_github_app_token: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
          product_handle: ${{ secrets.SHOP_PRODUCT_HANDLE }}
          collection_handle: ${{ secrets.SHOP_COLLECTION_HANDLE }}
  theme-check:
    name: Theme Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install Shopify CLI
        run: npm install -g @shopify/cli @shopify/theme
      - name: Create theme-check config
        run: |
          echo 'extends: []' > .theme-check.yml
          echo 'ignore:' >> .theme-check.yml
          echo '  - node_modules/**' >> .theme-check.yml
      - name: Run Theme Check
        run: shopify theme check
